# ======== GitHub Actions Job ======================================
#   Name    : Hyundeok
#   Date    : 2021.08.31
# ==================================================================

name: 'Demo-Pipeline'

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: minidemoacr001
  REGISTRY_USERNAME: minidemoacr001
  REGISTRY_PASSWORD: 5tbrfjWxVjEKSoo6W7o41NG+IWD7lmpk
  CLIENT_ID: b974d7de-87ff-4c8d-b5c0-d5dfcd7fab6e
  CLIENT_SECRET: 357650f0-c989-4354-ba4b-b36e42c5e065
  CLUSTER_NAME: aks-demo-cluster
  CLUSTER_RESOURCE_GROUP: minipj-demo-rg
  DOCKERFILE_DIR: ./board-api
  NAMESPACE: minipj
  FRONT_APP_NAME: azure-vote-front
  BACKEND_APP_NAME: azure-vote-back
  TAG: latest

# ==================================================================
#  Container Deploy
# ==================================================================
  vote-app:
    name: 'Voting-App'
    runs-on: ubuntu-latest
    environment: demo

    steps:
    # GitHub Checkout
    - name: Checkout
      uses: actions/checkout@v1

    # ACR로 Docker Login
    - name: ACR Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
     
    # Docker Build
    - name: Docker Build
      run: |
        docker build -t minipj/minipj-front:v1 ./board-api/
        docker build -t minipj/minipj-back:v1 ./board-app
        docker tag minipj/board-api:v1 ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.FRONT_APP_NAME }}:${{ env.TAG }}
        docker tag mminipj/board-app:v1 ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:${{ env.TAG }}

    # Docker Push
    - name: Docker Push
      run: |
        az acr login --name ${{ env.REGISTRY_NAME }} -u ${{ CLIENT_ID }} -p ${{ CLIENT_SECRET }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.FRONT_APP_NAME }}:${{ env.TAG }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:${{ env.TAG }}

    # Azure Kubernetes Service (AKS) cluster 세팅
    - name: AKS Cluster Setting
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Namespace 없을 시, 생성
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Deploy app to AKS
    - name: Deploy minipj-App
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          minipj-devops.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.FRONT_APP_NAME }}:${{ env.TAG }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:${{ env.TAG }}
        namespace: ${{ env.NAMESPACE }}